import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import { Providers } from "./providers";

// src/app/layout.tsx
("use client");
import type { ReactNode } from "react";
import { ChakraProvider } from "@chakra-ui/react";

import "./globals.css";
import { fileSystem } from "@/data/fileSystem";
import { dssLanguage } from "@/data/dssLanguage";
import { Header } from "@/componenets/Header";
import { useEffect } from "react";
import * as monaco from "monaco-editor";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: ReactNode }) {
  useEffect(() => {
    // Register the DSS language and theme when the component mounts
    if (
      monaco.languages.getLanguages().find((lang) => lang.id === "dss") ===
      undefined
    ) {
      monaco.languages.register({ id: "dss" });
      monaco.languages.setMonarchTokensProvider("dss", dssLanguage);
      monaco.editor.defineTheme("dssTheme", {
        base: "vs-dark",
        inherit: true,
        rules: [
          { token: "identifier", foreground: "a6e22e" },
          { token: "number", foreground: "e6db74" },
          { token: "string", foreground: "e6db74" },
          { token: "delimiter", foreground: "f8f8f2" },
          // Add more rules as needed
        ],
        colors: {
          "editor.background": "#272822",
        },
      });
    }
  }, []);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ChakraProvider>{children}</ChakraProvider>
      </body>
    </html>
  );
}
